# Docker example. Need rsync, MySQL-python installed. Configure separate .my.cnf files for databases.
---
- hosts: web

  tasks:

  - name: Set time
    set_fact: temp="{{lookup('pipe','date \"+%Y-%m-%d-%H-%M-%S\"')}}"

  - name: export development database
    mysql_db:
      state: dump
      name: wordpress
      #login_unix_socket: /var/run/mysqld/mysqld.sock (Ubuntu wanted this, wasn't required for centos)
      login_host: 192.168.0.2
      login_port: 3320
      config_file: /root/.my.cnf
      target: /wordpress_prod/wordpress_test.sql

  - name: backup development database
    mysql_db:
      state: dump
      name: wordpress
      #login_unix_socket: /var/run/mysqld/mysqld.sock (Ubuntu wanted this, wasn't required for centos)
      login_host: 192.168.0.2
      login_port: 3320
      config_file: /root/.my.cnf
      target: "/wordpress_test/wordpress_test_{{ temp }}.sql"

  - name: backup production database
    mysql_db:
      state: dump
      name: wordpress
      login_host: 192.168.0.2
      config_file: /root/.my.cnf.db
      login_port: 3308
      login_user: root
      target: "/wordpress_prod/wordpress_prod_{{ temp }}.sql"

  - name: backup development web content
    archive:
      path: /var/lib/docker/volumes/wordpresstest_html/_data
      dest: "/wordpress_test/wordpress_test__{{ temp }}.tgz"

  - name: backup production web content
    archive:
      path: /var/lib/docker/volumes/wordpressprod_html/_data
      dest: "/wordpress_prod/wordpress_prod_{{ temp }}.tgz"

  - name: start import
    debug:
      msg: "Starting data import process"

  - name: change database configuration for production
    replace:
      path: /wordpress_prod/wordpress_test.sql
      regexp: 'http://192.168.0.2:8007'
      replace: "http://192.168.0.2:8009"

  - name: Stop production web services
    command: /usr/local/bin/docker-compose down
    args:
      chdir: /wordpress_prod

  - name: Synchronize content to production
    synchronize:
      src: /var/lib/docker/volumes/wordpresstest_html/_data
      dest: /var/lib/docker/volumes/wordpressprod_html
      delete: yes
    delegate_to: 192.168.0.2

  - name: start production web services
    command: /usr/local/bin/docker-compose up -d
    args:
      chdir: /wordpress_prod

  - name: import test database
    mysql_db:
      state: import
      name: wordpress
      login_host: 192.168.0.2
      config_file: /root/.my.cnf.db
      login_port: 3308
      login_user: root
      target: /wordpress_prod/wordpress_test.sql

  - name: production update complete
    debug:
      msg: Wordpress backups and update complete
